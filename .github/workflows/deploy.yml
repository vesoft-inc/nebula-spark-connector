# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: release

on:
  push:
    branches:
      - release-3.6.0_for_spark

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Install nebula-graph
        run: |
          mkdir tmp
          pushd tmp
          git clone https://github.com/vesoft-inc/nebula-docker-compose.git
          pushd nebula-docker-compose/
          cp ../../nebula-spark-connector/src/test/resources/docker-compose.yaml .
          docker-compose up -d
          sleep 30
          popd
          popd

      - name: enter spark2.2
        run: pushd nebula-spark-connector_2.2

      - name: Deploy release for spark2.2 to Maven
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.JAVA_GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.JAVA_GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.OSSRH_USERNAME }}
          nexus_password: ${{ secrets.OSSRH_TOKEN }}
          directory: nebula-spark-connector_2.2

      - name: enter spark3.0
        run: |
          popd
          pushd nebula-spark-connector_3.0

      - name: Deploy release for spark3.0 to Maven
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.JAVA_GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.JAVA_GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.OSSRH_USERNAME }}
          nexus_password: ${{ secrets.OSSRH_TOKEN }}
          directory: nebula-spark-connector_2.2
